# test_find_average_size_error: проверяет, что правильность размера.
# test_find_average_checker_integration: проверяет, на правильность создания списка.
# test_find_average_empty_error: проверяет правильно ли обрабатывает пустой список.
# test_find_average_end_to_end: проверяет корректность сравнения средних значений двух списков
# test_find_average_type_error: проверяет корректность типа данных списка.
# test_is_prime: проверяет на правильность вывода.
        
#  проверка качества кода с помощью pylint
# pylint test.py
    


# Тесты, которые были написаны для программы, покрывают основные сценарии использования и проверяют основные функциональности программы:

#     Тестирование расчета среднего значения:
#         test_find_average_size_error: проверяет, что правильность размера. Это важно, чтобы убедиться, что программа корректно обрабатывает крайние случаи.
#         test_find_average_empty_error: Этот тест проверяет правильность расчета среднего значения для непустого списка. Это важно для убеждения в корректности базовой функциональности.

#     Тестирование сравнения средних значений списков:
#         test_find_average_end_to_end: Этот тест проверяет, что программа корректно сравнивает средние значения двух списков и возвращает правильное сообщение о сравнении. Это важная часть функциональности программы, которую необходимо протестировать.

# Почему были выбраны именно эти сценарии:

#     Пустой список: Обработка пустых списков важна для программы, чтобы избежать ошибок или непредвиденного поведения.
#     Нормальный случай: Проверка нормального случая помогает убедиться, что программа работает правильно в типичных условиях.
#     Сравнение списков: Это ключевая часть программы, которую необходимо протестировать, чтобы убедиться, что сравнение средних значений работает правильно.

# Эти тесты позволяют убедиться в корректности работы программы в основных сценариях использования.